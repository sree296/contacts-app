{"ast":null,"code":"var _jsxFileName = \"/Users/gattusr/Documents/Projects/Sreeni/my-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetail from './ContactDetail';\nimport { uuid } from 'uuidv4';\nimport api from '../api/contacts';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState();\n  const [searchResults, setSearchResults] = useState([]); //Retrieve Contacts\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n\n    if (searchTerm !== '') {\n      const newContactList = contacts.filter(contact => {\n        return Object.values(contact).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n\n  const addContactHandler = async contact => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactsList = contacts.filter(contact => {\n      return contact.id != id;\n    });\n    setContacts(newContactsList);\n  };\n\n  useEffect(() => {\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n\n      if (allContacts) {\n        setContacts(allContacts);\n      }\n    };\n\n    getAllContacts(); // const retrievedContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if(retrievedContacts){\n    //   setContacts(retrievedContacts);\n    // }\n  }, []);\n  useEffect(() => {// localStorage.setItem(\n    //   LOCAL_STORAGE_KEY,\n    //   JSON.stringify(contacts)\n    // )\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/add\",\n          render: props => /*#__PURE__*/_jsxDEV(AddContact, { ...props,\n            addContactHandler: addContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: props => /*#__PURE__*/_jsxDEV(ContactList, { ...props,\n            getContactId: removeContactHandler,\n            contacts: contacts,\n            term: searchTerm,\n            searchKeyword: searchHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contact/:id\",\n          component: ContactDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LCAVIl1YenruYD+P1pzFulEmEvc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gattusr/Documents/Projects/Sreeni/my-app/src/components/App.js"],"names":["React","useState","useEffect","Header","AddContact","ContactList","ContactDetail","uuid","api","BrowserRouter","Router","Switch","Route","App","LOCAL_STORAGE_KEY","contacts","setContacts","searchTerm","setSearchTerm","searchResults","setSearchResults","retrieveContacts","response","get","data","searchHandler","newContactList","filter","contact","Object","values","join","toLowerCase","includes","addContactHandler","console","log","request","id","post","removeContactHandler","delete","newContactsList","getAllContacts","allContacts","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetail from './ContactDetail';\nimport {uuid} from 'uuidv4';\nimport api from '../api/contacts';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nfunction App(){\n\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState();\n  const [searchResults, setSearchResults] = useState([]);\n\n  //Retrieve Contacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  const searchHandler = (searchTerm) => {\n      setSearchTerm(searchTerm);\n      if(searchTerm !== ''){\n        const newContactList = contacts.filter( (contact) => {\n          return Object.values(contact)\n                  .join(\" \")\n                  .toLowerCase()\n                  .includes(searchTerm.toLowerCase());\n        })\n        setSearchResults(newContactList);\n      }else{\n        setSearchResults(contacts);\n      }\n  };\n  const addContactHandler = async (contact) => {\n    console.log(contact);\n\n    const request = {\n      id : uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request)\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactsList = contacts.filter( (contact) => {\n      return contact.id != id;\n    });\n    setContacts(newContactsList);\n  };\n\n  useEffect( () => {\n    const getAllContacts = async () => {\n        const allContacts = await retrieveContacts();\n        if(allContacts){\n          setContacts(allContacts);\n        }\n    }\n    getAllContacts();\n    // const retrievedContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if(retrievedContacts){\n    //   setContacts(retrievedContacts);\n    // }\n  }, []);\n\n  useEffect( ()=> {\n    // localStorage.setItem(\n    //   LOCAL_STORAGE_KEY,\n    //   JSON.stringify(contacts)\n    // )\n  },[contacts]);\n\n  return(\n    <div className=\"ui container App\">\n      <Header />\n      <Router>\n        <Switch>\n        <Route \n          exact\n          path=\"/add\" \n          render = { (props) =>(\n            <AddContact\n            {...props}\n            addContactHandler = {addContactHandler}\n            />\n          ) }\n          />\n        <Route \n          exact\n          path=\"/\" \n          render = { (props) => (\n            <ContactList \n            {...props}\n            getContactId={removeContactHandler}\n            contacts={contacts}\n            term = {searchTerm}\n            searchKeyword = { searchHandler }\n            />\n          )}\n          />\n\n          <Route\n            exact\n            path=\"/contact/:id\"\n            component={ContactDetail}\n            />\n        </Switch>\n      \n      </Router>\n      \n    </div>\n)\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}